/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edusys.ui;

//import com.edusys.model.NhanVien;
//import com.edusys.model.nhanVienDAO;
import com.edusys.DAO.NhanVienDAO;
import com.edusys.Entity.NhanVien;
import com.edusys.jdbcHepper.JDBCHepper;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class QuanLi_NhanVienJDialog extends javax.swing.JDialog {

    /**
     * Creates new form NhanVienJDialog
     */
//    nhanVienDAO nvDAO = new nhanVienDAO();
    NhanVienDAO nvDAO = new NhanVienDAO();
    DefaultTableModel model;
    private boolean validata = true;
    int index;

    public QuanLi_NhanVienJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
//        nvDAO.queryListNhanVien();
        model = (DefaultTableModel) tblNhanVien.getModel();
        btnThem.setEnabled(false);
        filltoTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHoTenNhanVIen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        rdoQuanLi = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        lblErro = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiemNhanVien = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("EduSys - Quản Lí Nhân Viên");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Mã Nhân Viên");

        txtMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtMaNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaNhanVienKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Họ Tên Nhân Viên");

        txtHoTenNhanVIen.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Vai Trò");

        buttonGroup1.add(rdoQuanLi);
        rdoQuanLi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoQuanLi.setText("Quản Lí");

        buttonGroup1.add(rdoNhanVien);
        rdoNhanVien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoNhanVien.setText("Nhân Viên");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton5.setText("|<");

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton6.setText("<<");

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton7.setText(">>");

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton8.setText(">|");

        lblErro.setForeground(new java.awt.Color(255, 0, 0));
        lblErro.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoQuanLi)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNhanVien))
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(txtHoTenNhanVIen, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(txtMaNhanVien)
                            .addComponent(lblErro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErro)
                .addGap(3, 3, 3)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHoTenNhanVIen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoQuanLi)
                    .addComponent(rdoNhanVien))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem)
                        .addComponent(btnSua)
                        .addComponent(btnXoa)
                        .addComponent(btnMoi))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton5)
                        .addComponent(jButton6)
                        .addComponent(jButton7)
                        .addComponent(jButton8)))
                .addGap(80, 80, 80))
        );

        jTabbedPane1.addTab("Cập Nhật", jPanel1);

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ Tên", "Vai trò"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("TÌm Kiếm"));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        txtTimKiemNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKiemNhanVien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemNhanVienKeyReleased(evt);
            }
        });
        jPanel3.add(txtTimKiemNhanVien);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Danh Sách", jPanel2);

        getContentPane().add(jTabbedPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
        btnThem.setEnabled(true);
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (validateForm()) {
            insertNhanVienByDAO(getNhanVien());
            JOptionPane.showMessageDialog(this, "Thêm thành công");
        }
//            try {
//                nvDAO.insertNhanVien(getNhanVien());
//                btnThem.setEnabled(false);
//                String vaito = "";
//                if (rdoQuanLi.isSelected()) {
//                    vaito = "trưởng phòng";
//                } else if (rdoNhanVien.isSelected()) {
//                    vaito = "trưởng phòng";
//                }
//                model.addRow(new Object[]{getNhanVien().getManhanvien(), getNhanVien().getHoten(), vaito});
//                JOptionPane.showMessageDialog(this, "Thêm thành Nhân Viên thành công");
//            } catch (Exception e) {
//                e.printStackTrace();
//                System.out.println("dell add dc ok");
//            }
//
//        }

    }//GEN-LAST:event_btnThemActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        EduSysJFrame.lblStatus.setText("Hệ thống quản lí đào tạo EduSys");
    }//GEN-LAST:event_formWindowClosed

    private void txtMaNhanVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNhanVienKeyReleased
//        if (btnThem.isEnabled() == true) {
//            for (NhanVien nv : nvDAO.listNhanVienDAO) {
//                if (nv.getManhanvien().equalsIgnoreCase(txtMaNhanVien.getText())) {
//                    lblErro.setText("Mã Nhân viên này đã tồn tại");
//                    validata = false;
//                    break;
//                } else {
//                    lblErro.setText("");
//                    validata = true;
//                }
//            }
//        }
//        txtMaNhanVien.setText(txtMaNhanVien.getText().toUpperCase());
    }//GEN-LAST:event_txtMaNhanVienKeyReleased

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "bạn có muốn xóa nhân viên này không");
        if (i == JOptionPane.YES_OPTION) {
            try {
                xoaNhanVienByDAO(getNhanVien());
                JOptionPane.showMessageDialog(this, "Xóa Thành Công");
//                nvDAO.deleteNhanVien(getNhanVien());
//                model.removeRow(tblNhanVien.getSelectedRow());
                clearForm();
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("sai cmmr");
            }

        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if (validateForm()) {
            updateNhanVienByDAO(getNhanVien());
            JOptionPane.showMessageDialog(this, "Sửa thành công");
        }
//            nvDAO.listNhanVienDAO.set(tblNhanVien.getSelectedRow(), getNhanVien());
//            String manv = tblNhanVien.getValueAt(tblNhanVien.getSelectedRow(), 0) + "";
//            nvDAO.updateNhanVien(showForm(manv), txtMaNhanVien.getText(), getNhanVien());
//            model.setValueAt(txtMaNhanVien.getText(), tblNhanVien.getSelectedRow(), 0);
//            model.setValueAt(txtHoTenNhanVIen.getText(), tblNhanVien.getSelectedRow(), 1);
//            if (rdoQuanLi.isSelected()) {
//                model.setValueAt("Quản Lí", tblNhanVien.getSelectedRow(), 2);
//            }
//            if (rdoNhanVien.isSelected()) {
//                model.setValueAt("Nhân Viên", tblNhanVien.getSelectedRow(), 2);
//            }
//            JOptionPane.showMessageDialog(this, "sửa thành công");
//            clearForm();
//            btnThem.setEnabled(false);
//        }
//        System.out.println(nvDAO.listNhanVienDAO);


    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        String manv = tblNhanVien.getValueAt(tblNhanVien.getSelectedRow(), 0) + "";
        showFormByDAO(manv);
        jTabbedPane1.setSelectedIndex(0);
        btnThem.setEnabled(false);
////        index = tblNhanVien.getRowCount();
//        txtMaNhanVien.setText(showForm(manv).getManhanvien());
//        txtHoTenNhanVIen.setText(showForm(manv).getHoten());
//        if(showForm(manv).isVaitro()){
//            rdoQuanLi.setSelected(true);
//        }else if(showForm(manv).isVaitro() == false){
//            rdoNhanVien.setSelected(true);
//        }
//        jTabbedPane1.setSelectedIndex(0);

    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void txtTimKiemNhanVienKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemNhanVienKeyReleased
        timKiemNhanVien(txtTimKiemNhanVien.getText());
    }//GEN-LAST:event_txtTimKiemNhanVienKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLi_NhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLi_NhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLi_NhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLi_NhanVienJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLi_NhanVienJDialog dialog = new QuanLi_NhanVienJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblErro;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoQuanLi;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtHoTenNhanVIen;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtTimKiemNhanVien;
    // End of variables declaration//GEN-END:variables

    List<NhanVien> listNhanVien = nvDAO.selectAll();

    private void clearForm() {
        txtMaNhanVien.setText("");
        txtHoTenNhanVIen.setText("");
        index = -1;
    }

    private NhanVien getNhanVien() {
        NhanVien getNhanVien = new NhanVien();
        getNhanVien.setManhanvien(txtMaNhanVien.getText());
        getNhanVien.setHoten(txtHoTenNhanVIen.getText());
        getNhanVien.setMatkhau("edusys");
        if (rdoQuanLi.isSelected()) {
            getNhanVien.setVaitro(true);
        } else if (rdoNhanVien.isSelected()) {
            getNhanVien.setVaitro(false);
        }
        getNhanVien.setFirstlogin(true);
        getNhanVien.setDeleteAt(true);
        return getNhanVien;

    }

    private void filltoTable() {
        String vaitro = "";

        for (NhanVien nv : listNhanVien) {
            if (nv.isVaitro() == true) {
                vaitro = "Trưởng Phòng";
            } else if (nv.isVaitro() == false) {
                vaitro = "Nhân Viên";
            }
            if (nv.isDeleteAt() == true) {
                model.addRow(new Object[]{nv.getManhanvien(), nv.getHoten(), vaitro});
            }

        }
    }

    private void showFormByDAO(String ma) {
        for (NhanVien nv : listNhanVien) {
            if (nv.getManhanvien().equals(ma)) {
                txtHoTenNhanVIen.setText(nv.getHoten());
                txtMaNhanVien.setText(nv.getManhanvien());
                if (nv.isVaitro()) {
                    rdoQuanLi.setSelected(true);
                } else {
                    rdoNhanVien.setSelected(true);
                }
                break;
            }

        }
    }

    private void insertNhanVienByDAO(NhanVien getNV) {
        String vaitro = "";
        NhanVien nv = new NhanVien();
        nv.setManhanvien(getNV.getManhanvien());
        nv.setHoten(getNV.getHoten());
        nv.setFirstlogin(true);
        nv.setMatkhau("edusys");
        nv.setVaitro(getNV.isVaitro());
        nv.setDeleteAt(true);

        try {
            nvDAO.insert(nv);
            listNhanVien.add(nv);
            if (nv.isVaitro() == true) {
                vaitro = "Trưởng Phòng";
            } else if (nv.isVaitro() == false) {
                vaitro = "Nhân Viên";
            }
            if (nv.isDeleteAt() == true) {
                model.addRow(new Object[]{nv.getManhanvien(), nv.getHoten(), vaitro});
            }
            System.out.println("ok nhan vien");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("loi insert nhan vien DAO");
        }
    }

    private NhanVien getNhanVienByList(String ma) {
        NhanVien returnNV = null;
        for (NhanVien nv : listNhanVien) {
            if (nv.getManhanvien().equals(ma)) {
                returnNV = nv;
                break;
            }
        }
        return returnNV;
    }

    private void updateNhanVienByDAO(NhanVien getNV) {
        String vaitro="";
        if (getNV.isVaitro() == true) {
            vaitro = "Trưởng Phòng";
        } else if (getNV.isVaitro() == false) {
            vaitro = "Nhân Viên";
        }
        try {
            nvDAO.update(getNV, "key");
            for(int i=0;i<listNhanVien.size();i++){
                if(listNhanVien.get(i).getManhanvien().equals(getNV.getManhanvien())){
                    listNhanVien.set(i, getNV);
                    break;
                }
            }
            model.setValueAt(getNV.getManhanvien(), index, 0);
            model.setValueAt(getNV.getHoten(), index, 0);
            model.setValueAt(vaitro, index, 0);
            System.out.println("ok sua thanh cong");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("loi k sua nhan vien DAO");
        }
    }

    private boolean validateForm() {
        boolean retun = true;
        if (txtMaNhanVien.getText().isEmpty()) {
            txtMaNhanVien.requestFocus();
            JOptionPane.showMessageDialog(this, "Mã Nhân Viên không đc để trống");
            retun = false;
        }
        if (txtHoTenNhanVIen.getText().isEmpty()) {
            txtHoTenNhanVIen.requestFocus();
            JOptionPane.showMessageDialog(this, "Họ Tên Nhân Viên không đc để trống");
            retun = false;
        }
        if (!rdoQuanLi.isSelected() && !rdoNhanVien.isSelected()) {
            JOptionPane.showMessageDialog(this, "Chưa chọn vai trò");
            retun = false;
        }
        return retun;
    }

    private void xoaNhanVienByDAO(NhanVien getNV) {
        NhanVien nv = new NhanVien();
        nv.setManhanvien(getNV.getManhanvien());
        nv.setHoten(getNV.getHoten());
        nv.setMatkhau(getNV.getMatkhau());
        nv.setFirstlogin(getNV.isFirstlogin());
        nv.setVaitro(getNV.isVaitro());
        nv.setDeleteAt(false);
        try {
            nvDAO.deleteAtDAO(getNV);
            listNhanVien.remove(nv);
            model.removeRow(index);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

//    private NhanVien showForm(String manv) {
//        NhanVien newNV = new NhanVien();
//        for (NhanVien nv : nvDAO.listNhanVienDAO) {
//            if (nv.getManhanvien().equals(manv)) {
//                newNV = nv;
//                break;
//            }
//        }
//        return newNV;
//    }
    private void timKiemNhanVien(String ma) {
        model.setRowCount(0);
        String vaitro = "";
        for (NhanVien nv : listNhanVien) {
            if (nv.isDeleteAt() == true) {
                if (nv.getManhanvien().contains(ma)) {
                    if (nv.isVaitro() == true) {
                        vaitro = "Trưởng Phòng";
                    } else if (nv.isVaitro() == false) {
                        vaitro = "Nhân Viên";
                    }
                    if (nv.isDeleteAt() == true) {
                        model.addRow(new Object[]{nv.getManhanvien(), nv.getHoten(), vaitro});
                    }
                }
            }
        }
        if (txtTimKiemNhanVien.getText().isEmpty()) {
            filltoTable();
        }
    }

}
